# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Install dependencies
        run: |
          cd core
          npm install
      - name: Build bundled REPL (minified and unminified)
        run: |
          cd core
          npm run build:web
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Prepare site structure
        run: |
          # Create a temporary directory for the site
          mkdir -p _site
          # Copy core/src contents (including redirect index.html, CNAME, .nojekyll)
          cp -r core/src/* _site/

          # Create bundled version at /repl/ (copy both minified and unminified bundles)
          cp -r core/src/repl/dist/* _site/repl/
          # Replace the loader section for bundled version (use minified in production)
          sed '/<!-- REXX_LOADER_SECTION_START -->/,/<!-- REXX_LOADER_SECTION_END -->/c\
          <!-- Bundled version - interpreter included directly (minified for production) -->\
          <script src="rexxjs.bundle.min.js"></script>' core/src/repl/index.html > _site/repl/index.html

          # Copy unbundled version to /repl/unbundled/
          mkdir -p _site/repl/unbundled
          # Replace the loader path for unbundled version served from subdirectory
          sed 's|<script src="../interpreter-web-loader.js"></script>|<script src="/interpreter-web-loader.js"></script>|' core/src/repl/index.html > _site/repl/unbundled/index.html
          # Copy interpreter-web-loader.js to site root
          cp core/src/interpreter-web-loader.js _site/
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload the prepared site structure
          path: '_site'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
